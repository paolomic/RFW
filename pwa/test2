from pywinauto.application import Application
from pywinauto import Desktop
import re

def find_single_notepad(title_pattern):
    try:
        # Usa Desktop() per trovare tutte le finestre invece di app.windows()
        desktop = Desktop(backend="uia")
        all_windows = desktop.windows()
        
        # Filtra solo le finestre di Notepad che matchano il pattern
        matching_notepads = [w for w in all_windows 
                           if w.window_text() and 
                           re.match(title_pattern, w.window_text()) and
                           "Notepad" in w.window_text()]
        
        # Verifica quante finestre sono state trovate
        if len(matching_notepads) == 0:
            print(f"Nessun Notepad trovato con titolo che matcha '{title_pattern}'")
            return None
        elif len(matching_notepads) > 1:
            print(f"Errore: Trovati {len(matching_notepads)} Notepad che matchano '{title_pattern}':")
            for w in matching_notepads:
                print(f"- {w.window_text()}")
            return None
        else:
            # Connettiti al singolo Notepad trovato
            notepad_title = matching_notepads[0].window_text()
            # Crea una nuova connessione all'applicazione trovata
            app = Application(backend="uia").connect(title=notepad_title)
            notepad = app.window(title=notepad_title)
            print(f"Connesso a Notepad: '{notepad_title}'")
            return notepad
            
    except Exception as e:
        print(f"Errore durante la ricerca: {str(e)}")
        return None

# Esempio di utilizzo
if __name__ == "__main__":
    # Prova con un pattern
    pattern = ".*mail_.*"
    notepad = find_single_notepad(pattern)
    
    # Se abbiamo trovato un notepad, possiamo usarlo
    if notepad:
        # Esempio: scriviamo qualcosa nel notepad trovato
        notepad.Document.type_keys("Notepad trovato!")